# Given a 32-bit signed integer, reverse digits of an integer.
# Example 1:
#   Input: 123
#   Output: 321
# Example 2:
#   Input: -123
#   Output: -321
# Example 3:
#   Input: 120
#   Output: 21
# Note:
# Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range:
# [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer
# overflows.


def reverse(x):
    result = 0
    wasNegative = False
    if x < 0:
        wasNegative = True
        x = -x
    while x > 0:
        if result > pow(2, 31):
            return 0
        result += x % 10
        if x >= 10:
            result *= 10
        x = x // 10
    if wasNegative:
        result = -result
        return result
    return result


print(reverse(102))

# In python we can directly declare long or int unlike java where we have integer.max_value